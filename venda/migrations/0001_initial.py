# Generated by Django 4.2.6 on 2023-12-04 19:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.IntegerField(default=0)),
                ('celular', models.IntegerField()),
                ('cep', models.IntegerField()),
                ('foto', models.ImageField(default='media/perfil.png', upload_to='media/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome', max_length=100)),
                ('descricao', models.CharField(help_text='Descrição', max_length=100)),
                ('preco', models.FloatField(help_text='Preço')),
                ('imagem', models.ImageField(default='Sem imagem', upload_to='images')),
                ('estoque', models.IntegerField(default=0)),
                ('categoria', models.CharField(blank=True, choices=[('c', 'Computador'), ('p', 'Periférico'), ('a', 'Acessório')], default='c', help_text='Categoria do produto', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='PC',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='ID', primary_key=True, serialize=False)),
                ('cpu', models.CharField(help_text='CPU', max_length=100)),
                ('gpu', models.CharField(help_text='GPU', max_length=100)),
                ('memoria_ram', models.CharField(help_text='Memória Ram', max_length=100)),
                ('motherboard', models.CharField(help_text='Placa mãe', max_length=100)),
                ('armazenamento', models.CharField(help_text='Armazenamento', max_length=100)),
                ('cooler', models.CharField(help_text='Sistema de resfriamento', max_length=100)),
                ('fonte', models.CharField(help_text='Fonte', max_length=100)),
                ('gabinete', models.CharField(help_text='Gabinete', max_length=100)),
                ('produto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='venda.produto')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(default=0)),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itenscarrinho', to='venda.carrinho')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='venda.produto')),
            ],
        ),
    ]
